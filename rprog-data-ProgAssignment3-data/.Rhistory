demo()
is.things
demo(is.things)
install.packages("KernSmooth")
library(KernSmooth)
log(-1)
library(datasets)
data(iris)
?iris
iris
lapply(iris, mean($Sepal.length))
lapply(iris, mean())
?lapply
apply(iris, 1, mean)
apply(iris, 2, mean)
mean
apply(iris, 2, mean())
apply(iris, 2, mean)
iris
split(data, 3)
?subset
split(iris, 3)
split(iris, iris$Species)
rowMeans(iris$Sepal.Length)
rowMeans(iris$Sepal.Length, 2)
tapply(iris, iris$Species, mean)
?tapply
tapply(iris, iris$Species, mean)
tapply(iris$Species, iris$Sepal.Length, mean)
tapply(iris$Species[,$virginica], iris$Sepal.Length, mean)
class(iris)
iris
?tapply
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 2, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
?sapply
split(mtcars$hp, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl))
sapply(split(mtcars$hp, mtcars$cyl), mean)
debut(ls)
debug(ls)
ls()
ls()
ls()
pwd
wd
setwd("~/datasciencecoursera")
source("cachemean.R")
a <- makeVector(c(1,2,3,4))
a$get()
a$getmean()
cachemean(a)
a$getmean()
cachemean(a)
a$set(c(10,20,30,40))
a$getmean()
cachemean(a)
cachemean(a)
a$get()
a$setmean(0)
a$getmean()
a$get()
cachemean(a)
a <- makeVector(c(5,25,125,625))
a$get()
cachemean(a)
cachemean(a)
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
amatrix$setsolve()
amatrix$setsolve(amatrix)
amatrix$setsolve()
amatrix$get()
amatrix$getsolve()
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getinverse()
amatrix$getsolve()
cacheSolve(amatrix)
cacheSolve(amatrix)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getsolve()
cacheSolve(amatrix)
amatrix$set(matrix(c(0,5,99,66), nrow=2, ncol=2))
cacheSolve(amatrix)
amatrix$get()
amatrix$getsolve()
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4,5,6, nrow=3, ncol=2)))
amatrix$get()
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4,5,6), nrow=3, ncol=2))
amatrix$get()
amatrix$getsolve()
amatrix$setsolve()
amatrix$setsolve()
amatrix$set()
amatrix$cacheSolve()
source('~/datasciencecoursera/ProgrammingAssignment2/cachematrix.R')
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4,5,6), nrow=3, ncol=2))
amatrix$get()
amatrix$setsolve()
cacheSolve(amatrix)
amatrix <- makeCacheMatrix(matrix(c(1,2,3,4,5,6,7,8,9), nrow=3, ncol=3))
amatrix$get()
cacheSolve(amatrix)
amatrix = makeCacheMatrix(matrix(c(1,2,3,4), nrow=2, ncol=2))
amatrix$get()
cacheSolve(amatrix)
amatrix$getsolve()
cacheSolve(amatrix)
str(amatrix)
x <- rnorm(100,2,4)
summary(x)
str(x)
f <- gl(40, 10)
str(f)
summary(f)
library(datasets)
head(airquality)
str(airquality)
m <- matrix(rnorm(100), 10, 10)
str(m)
s <- split(airquality, airquality$Month)
str(s)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2 * x + e
summary(y)
plot(x,y)
set.seet(1)
set.seed(1)
sample(1:100, 25)
sample(letter, 4)
sample(letters, 4)
sample(1:100, 25, replace = TRUE)
system.time(readLines("http://www.jhsph.edu"))
c <- readLines("http://http://www.jhsph.edu")
set.seed(1)
rpois(5,2)
set.seed(1)
rpois(5,2)
set.seed(10)
x<-rep(0:1, each = 5)
x
e<-rnorm(10,0,20)
e
summary(3)
summary(e)
str(e)
y<-0.5 + 2*x+e
y
plot(x,y)
swirl()
library(swirl)
swirl()
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create("testdir")
setwd(testdir)
setwd("testdir")
file.create("mytest.R")
ls
list.files()
file.exists("mytest.R")
file.info(mytest.R)
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path("mytest3.R")
file.path('folder1', 'folder2')
?dir.create
dir.create('testdir2', 'testdir3')
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
unlink("testdir2" recursive = TRUE)
unlink('testdir2', recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
library(datasets)
?library
library(datasets)
data("ChickWeight")
map <- data("ChickWeight")
map
ChickWeight
map <- ChickWeight
map
map$Diet
mean(map$Diet)
colMeans(map, na.rm = TRUE)
setwd("~/datasciencecoursera/rprog-data-ProgAssignment3-data")
outcome <- read.csv("outcome-of-care-measures.csv", colClasses = "character")
head(outcome)
ncol(outcome)
nrow(outcome)
outcome[,11] <- as.numeric(outcome[,11])
outcome[,11]
plot(outcome)
plot(outcome[,11], outcome[1])
hist(outcome[,11])
?inverse
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best()
head(myData)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best()
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
data(ZZ, outcome)
best(ZZ, outcome)
best("CA", "outcome")
best("ZZ", "outcome")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "outcome")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "heart attack")
best("ZZ", "heart attack")
best("CA", "ZZ")
best("CA", "pneumonia")
?which.min
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
?data.frame
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
?na.omit
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("CA", "pneumonia")
best("TX", "heart attack")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("TX", "heart attack")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("TX", "heart attack")
best("MD", "heart attack")
best("MD", "pneumonia")
submit()
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("TX", "heart attack")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/best.R')
best("MD", "heart attack")
best("TX", "heart attack")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript1.R")
submit()
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript2.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript4.R")
source("http://d396qusza40orc.cloudfront.net/rprog%2Fscripts%2Fsubmitscript3.R")
submit()
submit()
submit()
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankhospital.R')
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
rankhospital("MD", "heart attack", "worst")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
rankhospital("MD", "heart attack", "worst")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankall.R')
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankallplayground.R')
rankall2("heart attack")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankallplayground.R')
rankall2("heart attack")
source('~/datasciencecoursera/rprog-data-ProgAssignment3-data/rankallplayground.R')
rankall2("heart attack")
