demo()
is.things
demo(is.things)
install.packages("KernSmooth")
library(KernSmooth)
log(-1)
library(datasets)
data(iris)
?iris
iris
lapply(iris, mean($Sepal.length))
lapply(iris, mean())
?lapply
apply(iris, 1, mean)
apply(iris, 2, mean)
mean
apply(iris, 2, mean())
apply(iris, 2, mean)
iris
split(data, 3)
?subset
split(iris, 3)
split(iris, iris$Species)
rowMeans(iris$Sepal.Length)
rowMeans(iris$Sepal.Length, 2)
tapply(iris, iris$Species, mean)
?tapply
tapply(iris, iris$Species, mean)
tapply(iris$Species, iris$Sepal.Length, mean)
tapply(iris$Species[,$virginica], iris$Sepal.Length, mean)
class(iris)
iris
?tapply
tapply(iris$Sepal.Length, iris$Species, mean)
apply(iris, 2, mean)
apply(iris[,1:4], 1, mean)
apply(iris[,1:4], 2, mean)
library(datasets)
data(mtcars)
mtcars
sapply(split(mtcars$mpg, mtcars$cyl), mean)
sapply(mtcars, cyl, mean)
lapply(mtcars, mean)
apply(mtcars, 2, mean)
sapply(split(mtcars$mpg, mtcars$cyl), mean)
?sapply
split(mtcars$hp, mtcars$cyl)
sapply(split(mtcars$hp, mtcars$cyl))
sapply(split(mtcars$hp, mtcars$cyl), mean)
debut(ls)
debug(ls)
ls()
ls()
ls()
setwd("~/datasciencecoursera/exploratorydataanalysis")
download.file("https://github.com/jtleek/modules/blob/master/04_ExploratoryAnalysis/exploratoryGraphs/data/avgpm25.csv", "avgpm25.csv")
pollution <- read.csv("avgpm25.csv", colClasses = c("numeric", "character", "factor, "numeric", "numeric"))
pollution <- read.csv("avgpm25.csv", colClasses = c("numeric", "character", "factor", "numeric", "numeric"))
?hist()
library(datasets)
data(carss)
data(cars)
with(cars, plot(speed,dist))
with(cars, hist(speed,dist))
data.hist(speed,dist)
hist(data,dist)
with(cars, plot(speed,dist))
library(lattice)
state <- data.frame(state.x77, region = state.region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
library(ggplot2)
library(ggplot2)
install.packages(ggplot2)
install.packages("ggplot2")
library(ggplot2)
data(mpg)
qplot(displ, hwy, data = mpg)
install.packages("graphics")
install.packages("graphics")
install.packages("graphics")
install.packages("grDevices")
install.packages("grDevices")
install.packages("lattice")
installed.packages()
install.packages("grid")
install.packages("grid")
?par
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone))
hist(airquality$Ozone)
plot(Wind, Ozone)
?transform()
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)")
with(airquality, plot(Wind, Ozone, pch = "a", lty = "dashed"))
with(airquality, plot(Wind, Ozone, pch = "a", lty = "dashed", col = "red"))
with(airquality, plot(Wind, Ozone, pch = dot, lty = "dashed", col = "red"))
with(airquality, plot(Wind, Ozone, pch = ".", lty = "dashed", col = "red"))
colors()
with(airquality, plot(Wind, Ozone, lty = "dashed", col = "red"))
par("lty")
par("pch")
par("pch = 2")
lines("Wind, Ozone")
?text
library(datasets)
with(airquality, plot(Wind,Ozone))
with(subset(airquality, Month == 4), points(Wind,Ozone, col = "red"))
with(subset(airquality, Month == 5), points(Wind, Ozone, col = "red"))
?subset
with(subset(airquality, Month!=5), points(Wind, Ozone, col = "blue"))
legend("bottomleft", pch = 1, col = c("blue", "red", legend = c("May", "Other Months")))
legend("topright", pch = 1, col = c("blue", "red", legend = c("May", "Other Months")))
?legend()
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months")))
legend("bottomleft", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months")))
legend("bottomleft", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
legend("topright", pch = 1, col = c("blue", "red"), legend = c("May", "Other Months"))
?plot(type)
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20))
?lm
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd=3)
?lm
par(mfrow = c(1,2))
with(airquality, {plot(Wind,Ozone, main = "Ozone and Wind") plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {plot(Wind,Ozone, main = "Ozone and Wind"), plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")})
with(airquality, {
plot(Wind,Ozone, main = "Ozone and Wind")
plot(Solar.R, Ozone, main = "Ozone and Solar Radiation")
})
x <- rnorm(100)
x
hist(x)
par(mfrow=1)
par(mfrow = c(1,1))
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
z <- c(x, y)
z
with(z, plot(x,y))
df <- data.table([x],[y])
df <- data.table(x,y)
?data.table()
install.pack"data.table")
install.packages("data.table")
?data.table()
df <- data.table(x,y)
DT < tables(x,y)
DT <- tables(x,y)
df <- data.frame(x,y)
df
with(df, plot(x,y))
with(df, plot(x,y, pch=20))
with(df, plot(x,y, pch=10, col="red"))
with(subset(df, x<0), plot(x,y, col="blue"))
plot(subset(x>0,y, col="red")))
plot(x,y)
par(mar = c(4, 4, 2, 2))
plot(x,y)
plot(x, y, pch = 20)
title("Scatterplot")
text(-2,-2, "Label")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit)
abline(fit, lwd=3)
abline(fit, lwd-5, col="green")
plot(x,y, xlab = "Weight", ylab = "Height", main = "Scatterplot", pch = 20)
legend("topright", legend = "Data", pch = 20)
fit <- lm(y~x)
abline(fit, lwd = 3, col = "red")
z <- rpois(100)
z <- rpois(100,2)
par(mfrow = c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par("mar")
par(mar = c(2,2,1,1)
plot(x,y,pch=20)
par(mar = c(2,2,1,1,))
par(mar = c(2,2,1,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par(mfrow = c(1,1))
x <- rnorm(100)
y <- x + rnorm(100)
g <- gl(2, 50, labels = c("male", "female"))
str(g)
plot(x,y)
plot(x,y, type="n")
points(x[g == "male"], y[g == "male"], col = "green")
points(x[g == "female"], y[g == "female", col = "blue"])
points(x[g == "female"], y[g == "female"], col = "blue"])
points(x[g == "female"], y[g == "female"], col = "red")
?Devices
?xyplot
install.packages("xyplot")
library(datasets)
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.off()
dev.cur()
quartz()
dev.cur()
dev.set(3)
dev.set(2)
library(datasets)
with(faithful, plut(eruptions,waiting))
with(faithful, plot(eruptions, waiting))
title(main = "Butt Cracks")
dev.copy(png, file = "geyserplot.png")
dev.off()
